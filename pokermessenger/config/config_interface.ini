[data_repr]
values = [2, 3, 4, 5, 6, 7, 8, 9, 10, J, Q, K, A]
suits = [♠, ♣, ♦, ♥]
hands = [High Card, One Pair, Two Pair, Three of a Kind, Straight, Flush, Four of a Kind, Straight Flush]
turn_names = [Preflop, Flop, Turn, River]

[statements-round]
fold = fold
check = check
call = call
allin = allin
raise = raise

[statements-table]
initialize_table = ::init
start_round = ::start
player_buyin = ::buyin
refill_buyin = ::refill
show_user_table_money = ::money
toggle_last_round = ::lastround
leave_table = ::leave

[statements-user]
player_sign_up = sign up
show_user_money = show money
request_money = gimme moneyz

[statements-replies-table]
initialize_table_success = This group was initialized as a poker table.
initialize_table_failure = This group could not be initialized as a poker table.
start_round_success = A series of round will start.
start_round_failure = Failed to start a round.
start_round_failure_not_enough_players = Not enough players have bought into the game.
start_round_failure_not_init = This group had not yet been initialized as a poker table.
buyin_success = {} had bought into the game with {}.
buyin_failure_not_init = This group had not yet been initialized as a poker table.
buyin_failure_already_in_game = You are already playing in this game.
buyin_failure_maximum_players = There is a maxium amount of players playing on this table.
buyin_failure_not_signed_up = You have not yet signed up.
toggle_last_round_end = Game will end after this round.
toggle_last_round_undo = Game will continue.
leave_table_success = {} has left the game.
refill_buyin_success = Money successfully refilled to {}.
show_table_money_success = You have {}.

[statements-replies-user]
player_sign_up_success = Welcome {}! {} was added to your account. For more info about the game check the documentation at {}.
player_sign_up_failure = Could not sign you up.
not_signed_up_error = You are not in the database.
show_user_money_success = You have {} left.
request_money_success = {} successfully added.
request_money_failure = Money can be requested in {}.

[privateout-descriptors]
dealt_cards = {}

[publicout-descriptors]
new_round = ----- New Round -----
round_finished = ----- End of Round -----
new_turn = {}: {}
small_blind = {} posted a small blind of {}.
big_blind = {} posted a big blind of {}.
player_fold = 
player_check = 
player_call = 
player_raise = 
player_all_in = {} went all in with {}.
player_amount_to_call = {}, {} to call.
declare_premature_winner = {} won {}.
declare_finished_winner = {} won {} with {}, kicker {}.
public_card_show = {} has {}.

[hand-descriptors]
high_card_descriptor = High card {}
one_pair_descriptor = A pair of {}'s
two_pair_descriptor = Two pair, {}'s and {}'s
three_of_a_kind_descriptor = Three of a kind with {}'s
straight_descriptor = Straight from {} to {}
flush_descriptor = Flush of {} with high card {}
full_house_descriptor = Full house {}'s over {}'s
four_of_a_kind_descriptor = Four of a kind with {}'s
straight_flush_descriptor = Straight flush of {} from {} to {}
